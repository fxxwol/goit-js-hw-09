{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,UAsB3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASR,EAAKC,MACnCD,EAAKC,KAAKQ,QACV,IAAK,MAAOC,EAAKC,KAAUJ,EACzBK,EAAKF,IAAQC,EAGf,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAKE,OAAQD,IAChCE,EAAcF,EAAGD,EAAKI,OAAOC,KAAKC,GAC/BC,MAAMC,GACTR,EAAKI,OAASJ,EAAKS,I,IA/BvB,MAAMC,EAAW,IAAId,SAASR,EAAKC,MAC7BW,EAAO,GAEb,IAAK,MAAOW,EAAKC,KAAUF,EACzBV,EAAK,GAAGW,KAASC,EAGnB,SAAST,EAAcU,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACF,E,MAAUT,IAEnBY,EAAO,C,SAACH,E,MAAUT,GAAO,GAE1BA,EAAM,G,CAyBb,SAASE,GAAUO,SAAEA,EAAQT,MAAEA,IAC7BlB,EAAAkC,OAAOC,QAAQ,uBAAqBR,QAAiBT,M,CAIvD,SAASI,GAAQK,SAAEA,EAAQT,MAAEA,IAC3BlB,EAAAkC,OAAOE,QAAQ,sBAAoBT,QAAeT,M,CAXpDlB,EAAAkC,OAAOG,KAAK,CACVC,SAAS,EACTC,SAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form')\n}\n\nrefs.form.addEventListener('submit', onSubmitForm)\n\nconst formData = new FormData(refs.form);\nconst data = {}\n\nfor (const [key, value] of formData) {\n  data[`${key}`] = value\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay })\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  })\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const formData = new FormData(refs.form);\n  refs.form.reset()\n  for (const [key, value] of formData) {\n    data[key] = +value\n  }\n\n  for (let i = 1; i <= data.amount; i++) { \n    createPromise(i, data.delay).then(onSuccess)\n      .catch(onError);\n    data.delay += data.step\n  }\n\n}\n\nNotify.init({\n  useIcon: false,\n  fontSize: '18px',\n})\n\nfunction onSuccess({ position, delay}) { \n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n\n}\n\nfunction onError({ position, delay }) { \n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","e","preventDefault","formData1","FormData","reset","key1","value1","$47d4ff9957288465$var$data","i","amount","$47d4ff9957288465$var$createPromise","delay","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onError","step","$47d4ff9957288465$var$formData","key","value","position","Promise","resolve","reject","setTimeout","Math","random","Notify","success","failure","init","useIcon","fontSize"],"version":3,"file":"03-promises.8258f045.js.map"}